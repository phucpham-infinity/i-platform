"use strict";var e=require("express"),r=require("cors"),t=require("helmet"),s=require("morgan"),o=require("dotenv"),n=require("mongoose"),a=require("bcryptjs"),i=require("zod");function c(e){var r=Object.create(null);return e&&Object.keys(e).forEach((function(t){if("default"!==t){var s=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,s.get?s:{enumerable:!0,get:function(){return e[t]}})}})),r.default=e,Object.freeze(r)}c(o).config();const u=e=>{var r;return null===(r=process.env)||void 0===r?void 0:r[e]},d=new n.Schema({email:{type:String,required:!0,unique:!0},username:{type:String,required:!0},password:{type:String,required:!0,select:!1},createdAt:{type:Date,default:new Date},updatedAt:{type:Date,default:new Date}});d.pre("save",(function(e){var r=this;if(!r.isModified("password"))return e();a.genSalt(10,(function(t,s){if(t)return e(t);a.hash(r.password,s,(function(t,s){if(t)return e(t);r.password=s,e()}))}))})),d.methods.comparePassword=function(e,r){a.compare(e,this.password,(function(e,t){if(e)return r(e,!1);r(null,t)}))};var l=n.model("User",d);const p=e.Router(),m=i.z.object({body:i.z.object({email:i.z.string().email(),password:i.z.string().min(5)})});var y;p.use((y=m,(e,r,t)=>{var s,o;try{y.parse({body:e.body,query:e.query,params:e.params}),t()}catch(e){return r.status(400).json({status:400,error:(null===(o=null===(s=e.errors)||void 0===s?void 0:s.map)||void 0===o?void 0:o.call(s,(e=>e.message)))||JSON.stringify(e)})}})).route("/user/register").post((async(e,r)=>{const t=e.body,s=new l({username:t.username,password:t.password,email:t.email});try{const e=await s.save();return r.status(200).json({status:"ok",data:e})}catch(e){return r.status(400).json({status:400,error:e})}})),u("PORT")||process.exit(1);const f=+u("PORT"),g=u("DB_URL"),v=e();v.use(s("combined")),v.set("view engine","ejs"),v.set("views","./views"),v.use(t({contentSecurityPolicy:!1,frameguard:!1,crossOriginEmbedderPolicy:!1,crossOriginOpenerPolicy:!1,crossOriginResourcePolicy:!1})),v.use(r({origin:"*"})),v.use(e.json()),v.use(e.urlencoded({extended:!1})),v.use(e.static("public")),v.use("/api",[p]),v.get("*",(async(e,r)=>r.render("home",{layout:!1,name:"2023",path:e.path}))),v.listen(f,(()=>{console.log(`Server started on port ${f}: http://localhost:${f}`),(({db:e})=>{const r=()=>{n.connect(e).then((()=>console.info(`Successfully connected to ${e}`))).catch((e=>(console.error("Error connecting to database: ",e),process.exit(1))))};r(),n.connection.on("disconnected",r)})({db:g})})).on("error",(e=>{console.log("ERROR: ",e)})),exports.app=v;

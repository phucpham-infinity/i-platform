"use strict";var e=require("express"),r=require("cors"),t=require("helmet"),s=require("morgan"),o=require("dotenv"),n=require("mongoose"),a=require("bcrypt"),i=require("zod");var c,u,d=(c=o,u=Object.create(null),c&&Object.keys(c).forEach((function(e){var r;"default"!==e&&(r=Object.getOwnPropertyDescriptor(c,e),Object.defineProperty(u,e,r.get?r:{enumerable:!0,get:function(){return c[e]}}))})),u.default=c,Object.freeze(u));d.config();const l=e=>{var r;return null==(r=process.env)?void 0:r[e]},p=new n.Schema({email:{type:String,required:!0,unique:!0},username:{type:String,required:!0},password:{type:String,required:!0,select:!1},createdAt:{type:Date,default:new Date},updatedAt:{type:Date,default:new Date}});p.pre("save",(function(e){var r=this;if(!r.isModified("password"))return e();a.genSalt(10,(function(t,s){if(t)return e(t);a.hash(r.password,s,(function(t,s){if(t)return e(t);r.password=s,e()}))}))})),p.methods.comparePassword=function(e,r){a.compare(e,this.password,(function(e,t){if(e)return r(e,!1);r(null,t)}))};var m=n.model("User",p);const y=e.Router(),g=i.z.object({body:i.z.object({email:i.z.string().email(),password:i.z.string().min(5)})}),f=(y.use((w=g,(e,r,t)=>{try{w.parse({body:e.body,query:e.query,params:e.params}),t()}catch(s){return r.status(400).json({status:400,error:(null==(t=null==(e=s.errors)?void 0:e.map)?void 0:t.call(e,(e=>e.message)))||JSON.stringify(s)})}})).route("/user/register").post((async(e,r)=>{e=e.body,e=new m({username:e.username,password:e.password,email:e.email});try{var t=await e.save();return r.status(200).json({status:"ok",data:t})}catch(e){return r.status(400).json({status:400,error:e})}})),l("PORT")||process.exit(1),+l("PORT")),v=l("DB_URL"),b=e();var w;b.use(s("combined")),b.set("view engine","ejs"),b.set("views","./src/views"),b.use(t({contentSecurityPolicy:!1,frameguard:!1,crossOriginEmbedderPolicy:!1,crossOriginOpenerPolicy:!1,crossOriginResourcePolicy:!1})),b.use(r({origin:"*"})),b.use(e.json()),b.use(e.urlencoded({extended:!1})),b.use(e.static("dist")),b.use("/api",[y]),b.get("*",(async(e,r)=>r.render("home",{layout:!1,name:"2023",path:e.path}))),b.listen(f,(()=>{console.log(`Server started on port ${f}: http://localhost:`+f),(({db:e})=>{var r=()=>{n.connect(e).then((()=>console.info("Successfully connected to "+e))).catch((e=>(console.error("Error connecting to database: ",e),process.exit(1))))};r(),n.connection.on("disconnected",r)})({db:v})})).on("error",(e=>{console.log("ERROR: ",e)})),exports.app=b;
